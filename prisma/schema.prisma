generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Audio {
  id               String            @id @default(cuid())
  userId           String
  title            String
  artist           String
  releaseDate      DateTime          @default(now())
  primaryGenre     String
  secondaryGenre   String
  language         String
  label            String
  copyrightHolder  String
  copyrightYear    String
  productionHolder String
  productionYear   String
  releaseCover     String
  releaseAudio     String?
  releaseAudioLink String?
  lyrics           String?
  releaseType      String
  status           String
  UPC              String            @default("")
  ISRC             String            @default("")
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @default(now())
  smartLink        String            @default("")
  Track            Track[]
  Streams          Streams[]
  StreamByCountry  StreamByCountry[]
}

model Track {
  id               String  @id @default(cuid())
  audioId          String
  title            String
  lyrics           String?
  productionCredit String?
  ISRC             String?
  trackNumber      Int // Track number in the album
  audioLink        String // URL or path to track audio file

  Audio Audio @relation(fields: [audioId], references: [id])
}

model DSP {
  id      String    @id @default(cuid())
  name    String    @unique
  streams Streams[]
}

model Streams {
  id      String   @id @default(cuid())
  dspId   String
  dsp     DSP      @relation(fields: [dspId], references: [id])
  total   Int
  date    DateTime
  Audio   Audio    @relation(fields: [audioId], references: [id])
  audioId String

  @@unique([dspId, date, audioId]) // Unique constraint to avoid duplicate uploads
}

model Country {
  id               String            @id @default(uuid())
  name             String            @unique
  isoCode          String            @unique
  streamsByCountry StreamByCountry[]
}

model StreamByCountry {
  id        String   @id @default(uuid())
  countryId String
  country   Country  @relation(fields: [countryId], references: [id])
  total     Int
  date      DateTime
  audioId   String
  audio     Audio    @relation(fields: [audioId], references: [id])
}
